@using Microsoft.AspNetCore.Components.Authorization;

@using System.Security.Claims;

<AuthorizeView>
    <Authorized>
        @if (user == null)
        {
            @GetUserView();
        }
        else
        {
            <div class="ml-md-0">
                <div class="rounded-circle" style=@style>
                    <img src=@ImageStringRenderer.RenderImageString(user.Image, "images/default_user.png") alt="No image for this user" style="height: 45px;" />
                </div>
            </div>
            <div class="ml-md-2">
                <a href="me" style="color: orangered"> @user.Nickname </a>
            </div>
        }
        <a href="LogOut" class="ml-md-4" style="color: orangered"><span class="oi oi-account-logout" aria-hidden="true"></span> Log out </a>
    </Authorized>
    <NotAuthorized>
        <a href="Register" class="ml-md-0" style="color: orangered"><span class="oi oi-pencil" aria-hidden="true"></span> Register </a>
        <a href="Login" class="ml-md-2" style="color: orangered"><span class="oi oi-account-login" aria-hidden="true"></span> Log in </a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private string style = "width:45px; height:45px; overflow:hidden;";
    private CookTool.Shared.Authentication.UserView user = null;

    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task GetUserView()
    {
        var authState = await authenticationStateTask;
        var userAuth = authState.User;

        if (userAuth.Identity.IsAuthenticated)
        {
            var image = userAuth.FindAll(ClaimTypes.Surname).First().Value;
            var nickname = userAuth.FindAll(ClaimTypes.Name).First().Value;

            user =  new CookTool.Shared.Authentication.UserView(nickname, Convert.FromBase64String(image));

            this.StateHasChanged();
        }
    }

}