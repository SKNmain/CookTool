@page "/me"
@using Microsoft.AspNetCore.Components.Authorization
@using CookTool.Client.Shared.Helpers
@inject IJSRuntime JsRuntime

<AuthorizeView>
    <Authorized>
        @if (user == null)
        {
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        }
        else
        {
            <h2>@user.Nickname</h2>
            <hr />

            @if (!String.IsNullOrEmpty(Error))
            {
                <div class="alert alert-danger" role="alert">
                    <p>@Error</p>
                </div>
            }

            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-7">
                        <div class="form-group">
                            <label> Email: </label>
                            <input class="form-control" type="text" value="@user.Email" placeholder="email@example.com" readonly>
                        </div>

                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <span class="oi oi-paperclip" aria-hidden="true"></span>
                                <a href="/myrecipes" style="color: orangered"> My Recipes </a>
                            </li>
                            <li class="list-group-item">
                                <span class="oi oi-pin" aria-hidden="true"></span>
                                <a href="mytips" style="color: orangered"> My Tips </a>
                            </li>
                            <li class="list-group-item">
                                <span class="oi oi-list-rich" aria-hidden="true"></span>
                                <a href="mylists" style="color: orangered"> My Lists </a>
                            </li>
                            <li class="list-group-item">
                                <span class="oi oi-basket" aria-hidden="true"></span>
                                <a href="mykitcheningredients" style="color: orangered"> My Kitchen Ingredients </a>
                            </li>
                            <li class="list-group-item">
                                <span class="oi oi-calendar" aria-hidden="true"></span>
                                <a href="myweekmenu" style="color: orangered"> My Week Menu </a>
                            </li>
                            <li class="list-group-item">
                                <span class="oi oi-comment-square" aria-hidden="true"></span>
                                <a href="mycomments" style="color: orangered">  My Comments </a>
                            </li>
                        </ul>
                    </div>
                    <div class="col">
                        <div class="row justify-content-center">
                            <div class="rounded-circle" style=@style>
                                <img src=@ImageHelper.RenderImageString(user.Image, "images/default_user.png") alt="No image for this user" style="height: 300px;" />
                            </div>
                        </div>
                        <br />
                        <div class="row justify-content-center">
                            <button class="btn btn-outline-light" @onclick="@(() => AddImageModal.Open())" style="color: orangered">
                                <span class="oi oi-image" aria-hidden="true"></span>
                                Change photo
                            </button>
                            <Modal @ref="AddImageModal">
                                <Title>Change your profile image!</Title>
                                <Body>
                                    <div class="form-group">
                                        <div class="form-row">
                                            <label>Upload image: </label>
                                            <InputFile OnChange="@((files) => ImageHelper.ReadImage(files, file, user))" />
                                            @if (file != null)
                                            {
                                                <strong>File Selected: </strong> @file.Name
                                            }
                                        </div>
                                    </div>
                                </Body>
                                <Footer>
                                    <button type="button" class="btn btn-warning" data-dismiss="modal" @onclick="ChangeImage"><span class="oi oi-check" aria-hidden="true"></span></button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="AddImageModal.Close"><span class="oi oi-x" aria-hidden="true"></span></button>
                                </Footer>
                            </Modal>

                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                            <button class="btn btn-outline-light" @onclick="@(() => RemoveImage())" style="color: orangered">
                                <span class="oi oi-circle-x" aria-hidden="true"></span>
                                Delete photo
                            </button>
                        </div>
                        <br />
                        <div class="row justify-content-center">
                            <button class="btn btn-outline-light" @onclick="@(() => ChangePasswordModal.Open())" style="color: orangered">
                                <span class="oi oi-pencil" aria-hidden="true"></span>
                                Change password
                            </button>

                            <Modal @ref="ChangePasswordModal">
                                <Title>Change your password!</Title>
                                <Body>
                                    <ChangePassowordForm ChangePassword="@changePassword" />
                                </Body>
                                <Footer>
                                    <button type="button" class="btn btn-warning" data-dismiss="modal" @onclick="ChangePassword"><span class="oi oi-check" aria-hidden="true"></span></button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="AddImageModal.Close"><span class="oi oi-x" aria-hidden="true"></span></button>
                                </Footer>
                            </Modal>

                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>


@code {
    private string style = "width:300px; height:300px; overflow:hidden;";
    [Inject]
    public AbstractHttpClientRepository Client { get; set; }

    private Modal AddImageModal;
    private Modal ChangePasswordModal;
    private CookTool.Shared.Models.User user;
    private CookTool.Shared.Authentication.ChangePasswordModel changePassword;
    private IFileListEntry file;
    private string Error;

    protected override async Task OnInitializedAsync()
    {
        user = await Client.GetCurrentUser();
        changePassword = new CookTool.Shared.Authentication.ChangePasswordModel();
        AddImageModal = new Modal();
        ChangePasswordModal = new Modal();
    }

    private async Task RemoveImage()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to remove your profile image?");
        if (confirmed)
        {
            user.Image = null;
            await Client.UpdateUser(user);
            await OnInitializedAsync();
        }
    }

    private async Task ChangeImage()
    {
        await Client.UpdateUser(user);
        AddImageModal.Close();
    }

    private async Task ChangePassword()
    {
        var result = await Client.ChangeUserPassword(changePassword);
        changePassword = new CookTool.Shared.Authentication.ChangePasswordModel();
        if(!result.Successful) Error = result.Error;
        ChangePasswordModal.Close();
    }
}

