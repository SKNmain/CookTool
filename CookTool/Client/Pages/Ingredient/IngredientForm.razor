@using CookTool.Client.Shared.Models

<div class="container-fluid">
    <div class="row p-1">
        <div class="col-lg-2 col-md-2 col-sm-3">
            <label> Name: </label>
        </div>
        <div class="col">
            <input class="form-control" type="text" @onchange="@((ChangeEventArgs e) => item.Name = e.Value.ToString())">
        </div>
    </div>
    <div class="row p-1">
        <div class="col-lg-2 col-md-2 col-sm-3">
            <label> Quantity: </label>
        </div>
        <div class="col">
            <input class="form-control" type="number" min="1" placeholder="1" @onchange="@((ChangeEventArgs e) => item.Quantity = Double.Parse(e.Value.ToString()))">
        </div>
    </div>
    <div class="row p-1">
        <div class="col-lg-2 col-md-2 col-sm-3">
            <label> Units: </label>
        </div>
        <div class="col">
            @if (units == null)
            {
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            }
            else
            {
                <select class="form-control" id="units" @onchange="@((ChangeEventArgs e) => item.MeasurementUnitId = Int32.Parse(e.Value.ToString()))">
                    @foreach (var unit in units)
                    {
                        <option value="@unit.Id">@unit.Name</option>
                    }
                </select>
            }
        </div>
    </div>
</div>



@code {
    [Parameter] public IngredientItem item { get; set; }
    [Parameter] public List<CookTool.Shared.Models.MeasurementUnit> units { get; set; }
}
