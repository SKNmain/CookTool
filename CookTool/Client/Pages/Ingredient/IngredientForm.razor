@using CookTool.Client.Shared.Models

<div class="form-group row">
    <label class="col-md-1 col-form-label">Name:</label>
    <div class="col-md-4">
        <input class="form-control" type="text" @onchange="@((ChangeEventArgs e) => item.Name = e.Value.ToString())">
    </div>
</div>
<div class="form-group row">
    <label class="col-md-1 col-form-label">Quantity:</label>
    <div class="col-md-4">
        <input class="form-control" type="number" @onchange="@((ChangeEventArgs e) => item.Quantity = Int32.Parse(e.Value.ToString()))">
    </div>
</div>
<div class="form-group row">
    <label class="col-md-1 col-form-label">Units:</label>&nbsp;&nbsp;&nbsp;&nbsp;
    @if (units == null)
    {
        <div class="spinner-border-sm" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else
    {
        <select id="units" @onchange="@((ChangeEventArgs e) => item.MeasurementUnitId = Int32.Parse(e.Value.ToString()))">
            @foreach (var unit in units)
            {
                <option value="@unit.Id">@unit.Name</option>
            }
        </select>
    }
</div>


@code {
    [Parameter] public IngredientItem item { get; set; }
    [Parameter] public List<CookTool.Shared.Models.MeasurementUnit> units { get; set; }
}
